// SPDX-License-Identifier: MIT
pragma solidity 0.8.7;

// import "hardhat/console.sol";

contract YieldRater {

    bytes constant oneFives = hex'';

    bytes constant twos = hex

    function getYieldFor(uint256 id) external pure returns (uint256) {
        if (isFour(uint16(id)))    return 4 ether;
        if (isTwo(uint16(id)))     return 2 ether;
        if (isOneFive(uint16(id))) return 1.5 ether;
        return 1 ether;
    }

    function isFour(uint16 id) public pure returns (bool) {
        if (id == 518)  return true;
        if (id == 1741) return true;
        if (id == 2155) return true;
        if (id == 3185) return true;
        if (id == 4579) return true;
        if (id == 6018) return true;
        if (id == 7114) return true;
        if (id == 8349) return true;

        return false;
    }

    function isTwo(uint16 id) public pure returns (bool) {
        return isOnList(twos, 395, id);
    }

    function isOneFive(uint16 id) public pure returns (bool) {
        return isOnList(oneFives, 2143, id);
    }

    function isOnList(bytes memory list, uint256 length, uint16 id) internal pure returns (bool) {
        // Do a binary search
        uint256 middle;
        uint256 start = 0;
        uint256 end = length - 1;
        
        uint16 item; 

        while (true) {
            middle = (end - start) / 2 + start;
            item = getUintInIndex(list, middle);
            if (uint16(item) == uint16(id)) return true;
            if (uint16(start) == uint16(end)) return false;
            if (uint16(item) < uint16(id)) {
                start = middle + 1;
            } else {
                end = middle == start ? middle : middle - 1;
            }
        }
    }

    function getUintInIndex(bytes memory list, uint256 index) internal pure returns (uint16) {
        // load in memory
        uint256 start = index * 2;

        uint16 tempUint;

        assembly {
            tempUint := mload(add(add(list, 0x2), start))
        }

        return tempUint;
    }



}